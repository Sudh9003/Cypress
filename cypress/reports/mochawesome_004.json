{
  "stats": {
    "suites": 0,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-01-10T20:36:58.239Z",
    "end": "2023-01-10T20:37:04.221Z",
    "duration": 5982,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "589a81d1-d10f-4e17-a751-157c16bec15a",
      "title": "",
      "fullFile": "cypress\\e2e\\grabTextAsynNature.cy.js",
      "file": "cypress\\e2e\\grabTextAsynNature.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Cypress Grab Text",
          "fullTitle": "Cypress Grab Text",
          "timedOut": null,
          "duration": 2660,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit('https://rahulshettyacademy.com/seleniumPractise/#/');\ncy.get('.search-keyword').type('ca');\ncy.get('.products').as('productList');\ncy.get('@productList').find('.product').eq(1).contains('ADD TO CART').click(); // var text=cy.get('.brand')..//need to resolve the promise\n// cy.log(text.text());       //text() is not a cypress command SO we can't concatenate with cypress command\n// var tex=cy.get('.brand').text()..//gives error as cy.get()..text() is not a function\n// cy.log(tex)                      // So we need to resolve the promise by using .then() function.\ncy.get('.brand').then(function (val) {\n  //resolving the promise with .then()\n  cy.log(val.text());\n});\ncy.get('.brand').then(any => {\n  cy.log(any.text());\n});\ncy.get('@productList').find('.product').each(($el, index, list) => {\n  const text = $el.find('h4.product-name').text();\n  if (text.includes('Capsicum')) {\n    cy.log(text);\n    $el.find('button').trigger('click');\n  }\n});",
          "err": {},
          "uuid": "710e1400-acfe-46a4-8bc4-43c02269fab7",
          "parentUUID": "589a81d1-d10f-4e17-a751-157c16bec15a",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "710e1400-acfe-46a4-8bc4-43c02269fab7"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 2660,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports"
      },
      "version": "6.2.0"
    }
  }
}